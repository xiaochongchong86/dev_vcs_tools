
user  shawn;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $request_body '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
				  init_by_lua 'cjson = require "cjson"';

    server {
        listen       8000;
        server_name  localhost;

        charset utf-8;

        access_log  logs/host.access.log  main;

		rewrite_log on;

        location / {
			root /home/shawn/dev_vcs_tools_dev/html;
            index  index.htm;
        }

		# ====================
        location /www_edaijia {

		}

		# ====================
        location /sp_edaijia {
				 rewrite ^/sp_edaijia/(.*)$  /html/$1.htm last;
		}

        location /sp_edaijia/git {
				 rewrite ^/sp_edaijia/(.*)$  /$1 break;

				 proxy_pass http://127.0.0.1:8089;
		}

        location = /sp_edaijia/gitweb/port {
				content_by_lua "
					    ngx.say('8599')
				";
				 
		}



        location ~ /sp_edaijia/.*\.(js|css)$ {
				 rewrite ^/sp_edaijia/(.*)$  /html/$1 last;
		}


		# ====================
		location /html {
				 root /home/shawn/dev_vcs_tools_dev;
		}

	}


    server {
        listen       80;
        server_name  localhost;

        charset utf-8;

        access_log  logs/host.access.log  main;

		rewrite_log on;

        location / {
			root /home/shawn/dev_vcs_tools_dev/html;
            index  index.htm;

        }

		# ====================
        location /www_edaijia {
				 rewrite ^/www_edaijia/(.*)$  /html/$1.htm last;
		}

        location /www_edaijia/git {
				 rewrite ^/www_edaijia/(.*)$  /$1 break;

				 proxy_pass http://127.0.0.1:8081;
		}

        location = /www_edaijia/gitweb/port {
				content_by_lua "
					    ngx.say('8591')
				";
				 
		}


        location ~ /www_edaijia/.*\.(js|css)$ {
				 rewrite ^/www_edaijia/(.*)$  /html/$1 last;
		}


		# ====================
        location /sp_edaijia {
				 rewrite ^/sp_edaijia/(.*)$  /html/$1.htm last;
		}

        location /sp_edaijia/git {
				 rewrite ^/sp_edaijia/(.*)$  /$1 break;

				 proxy_pass http://127.0.0.1:8080;
		}

        location = /sp_edaijia/gitweb/port {
				content_by_lua "
					    ngx.say('8590')
				";
				 
		}



        location ~ /sp_edaijia/.*\.(js|css)$ {
				 rewrite ^/sp_edaijia/(.*)$  /html/$1 last;
		}


		# ====================
		location /html {
				 root /home/shawn/dev_vcs_tools_dev;
		}

	}


    server {
        listen       8000;
        server_name  localhost;

        charset utf-8;

        access_log  logs/host.access.log  main;


        location / {
            root   html;
            index  index.html index.htm;
        }

		location /git {
				 proxy_pass http://127.0.0.1:8080;
		}


        location /branch {
            root   /home/shawn/dev_vcs_tools;
			#rewrite ^(.*)$  $1.htm break;
            #index  index.html index.htm;
        }


		location /sms/tst {
#ngx.say(cjson.encode({dog = 5, cat = 6}))
#content_by_lua "
#			    ngx.say('{\"}')
#";

content_by_lua '
			    ngx.say("{\\"}")
';

		}

		location /sms/notify/guodu2 {
lua_need_request_body on; 

content_by_lua '
			   ngx.exit(ngx.HTTP_OK)
';

access_log  logs/access.sms.log  main;

}

		location /sms/notify/guodu {
lua_need_request_body on; 
content_by_lua '
			  ngx.say("0")
';

access_log  logs/access.sms.log  main;

		#echo "OK";
		#return 200;
		#echo '0';
		#return 404;
		}

	location ~ \.php$ {
            root           /home/helen/openrestry_php/install/yii-1.1.14.f0fee9/testdrive;
            #root           /home/code/code_tst/openresty_php/install/yii-1.1.14.f0fee9/requirements;                                 
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            # 这个配置很关键，而且要用绝对路径，否则应该是php找不到对应的脚本                                                          # 用document_root替换直接写
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            #fastcgi_param  SCRIPT_FILENAME  /home/code/code_tst/openresty_php/install/yii-1.1.14.f0fee9/requirements$fastcgi_script_n\
            include        fastcgi_params;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #
        #

 location /other {
        set $dog "$dog world";
        echo "$uri dog: $dog";

        content_by_lua '
ngx.req.read_body()
			ngx.log(ngx.ERR, "FUCK ",ngx.var.request_method)
			ngx.log(ngx.ERR, "args  ",ngx.var.args)


local args = ngx.req.get_uri_args()
            for key, val in pairs(args) do
                if type(val) == "table" then
                    ngx.say(key, ": ", table.concat(val, ", "))
                else
                    ngx.say(key, ": ", val)
                end
            end

			ngx.say(ngx.req.get_body_data())

        ';

    }

	location /luae {
	    content_by_lua '
ngx.exec("/other", ngx.var.args)
';
}
 
    location /lua {
        set $dog 'hello';
        content_by_lua '
ngx.req.read_body()
				local nargs = {method = "BBBBBBBBB"}


            res = ngx.location.capture(
			"/other?a=33",
--&"..ngx.var.args,
            {    args = nargs, body = ngx.req.get_body_data()});

 
            ngx.print(res.body)
			ngx.log(ngx.ERR, "FUCK ",ngx.var.request_method, ngx.req.get_body_data())
            ngx.say(ngx.var.uri, ": ", ngx.var.dog)
        ';
    }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
